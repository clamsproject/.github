name: "♻️,🏋 Bake Image Releaser"

on:
  workflow_call:
    inputs:
      pypi_dist_name:
        required: false
        type: string
        description: 'Name of the image to be uploaded to ghcr, will use the repository name if not provided'
      publish_cycle:
        required: false
        type: string
        default: '1 days'
        description: 'Time interval for checking updates (e.g., 1 days, 2 hours), will use `1 days` if not provided'
      version:
        required: false
        type: string
        description: 'version of the PyPI package, will use `YYMMDD` format if not provided'
      arm64:
        type: boolean
        description: 'set true to build arm64 image as well into a multiplatform image via docker buildx'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ inputs.pypi_dist_name  || github.repository }}
  
jobs:
  check-updates:
    name: "🧐 Check recent updates"
    runs-on: ubuntu-latest
    outputs:
      recent: ${{ steps.get_recent.outputs.RECENT }}
    env:
      OS: linux
      PYTHON: "3.10"
    steps:
      - name: "🛍️ Checkout repository"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: "🔬 Get pushes in the last cycle"
        id: get_recent
        run: |
          git --no-pager log --since='${{ inputs.publish_cycle }} ago' --oneline -- . ':^.github'
          echo ===
          echo "RECENT=$(git --no-pager log --since='${{ inputs.publish_cycle }} ago' --oneline -- . ':^.github' | wc -l)" >> $GITHUB_OUTPUT

  keep-alive:
    name: "🕰️ Keep repository alive"
    uses: ./.github/workflows/repo-keep-alive.yml

  build-and-push-image:
    name: "🐳 Build and push image"
    needs: [check-updates]
    if: needs.check-updates.outputs.recent != '0'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: "🛍️ Checkout repository"
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.version }}
          fetch-depth: 0

      - name: "📌 Generate bake version from git history"
        run: |
          echo "BAKE_VERSION=$(if [ ! -z "${{ inputs.version }}" ]; then echo ${{ inputs.version }}; else date +%y%m%d; fi)" >> $GITHUB_ENV

      - name: "🎛 Set up QEMU"
        uses: docker/setup-qemu-action@v2

      - name: "👷 Set up Docker Buildx"
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: "🏷 Prepare tags, labels"
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest
            type=raw,value=${{ env.BAKE_VERSION }}
            type=ref,event=tag
            type=ref,event=pr

      - name: "🔏 Log in to registry"
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: "🏗 Build and push image"
        uses: docker/build-push-action@v4
        with:
          context: .
          file: Containerfile
          platforms: "${{ inputs.arm64 && 'linux/amd64,linux/arm64' || 'linux/amd64' }}"
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          push: true
