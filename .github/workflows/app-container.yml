name: 🐳 Build and publish a Docker image

on:
  workflow_call:
    inputs:
      version:
        type: string
        description: 'version of the app to build an image. must be also tagged on github'
      arm64:
        type: boolean
        description: 'set true to build arm64 image as well into a multiplatform image via docker buildx'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    name: 🧱 Build and push image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: 📰 Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ inputs.version }}
          fetch-depth: 0

      - name: 📌 Generate app version from git history
        run: |
          echo "CLAMS_APP_VERSION=$(git describe --tags --always)" >> $GITHUB_ENV

      - name: ⽥ Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: 👷 Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: 🏷️ Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=${{ env.CLAMS_APP_VERSION }}
            type=ref,event=tag
            type=ref,event=pr

      - name: 🔏 Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🏗️ Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Containerfile
          platforms: "${{ inputs.arm64 && 'linux/amd64,linux/arm64' || 'linux/amd64' }}"
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            "CLAMS_APP_VERSION=${{ env.CLAMS_APP_VERSION }}"
          push: true

